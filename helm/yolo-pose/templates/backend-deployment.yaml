{{- if .Values.backend.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "backend.name" . }}
  labels:
    {{- include "backend.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.backend.replicaCount }}
  selector:
    matchLabels:
      {{- include "backend.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.backend.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "backend.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.backend.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.backend.serviceAccount.create }}
      serviceAccountName: {{ include "yolo-pose.serviceAccountName" . }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.backend.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-backend
          securityContext:
            {{- toYaml .Values.backend.securityContext | nindent 12 }}
          image: "{{ include "backend.image" . }}"
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            {{- toYaml .Values.backend.resources | nindent 12 }}
          env:
            - name: PYTHONPATH
              value: {{ .Values.backend.env.PYTHONPATH | quote }}
            - name: LOG_LEVEL
              value: {{ .Values.backend.env.LOG_LEVEL | quote }}
            - name: MODEL_PATH
              value: {{ .Values.backend.config.modelPath | quote }}
            - name: CORS_ORIGINS
              value: {{ join "," .Values.backend.config.corsOrigins | quote }}
            {{- if .Values.database.enabled }}
            - name: DATABASE_URL
              value: "postgresql://{{ .Values.database.username }}:{{ .Values.database.password }}@{{ .Values.database.host }}:{{ .Values.database.port }}/{{ .Values.database.name }}"
            {{- end }}
            {{- if .Values.redis.enabled }}
            - name: REDIS_URL
              value: "redis://{{ .Values.redis.host }}:{{ .Values.redis.port }}"
            {{- if .Values.redis.password }}
            - name: REDIS_PASSWORD
              value: {{ .Values.redis.password | quote }}
            {{- end }}
            {{- end }}
          {{- if .Values.backend.volumes.models.enabled }}
          volumeMounts:
            - name: models-volume
              mountPath: /app/models
          {{- end }}
      {{- if .Values.backend.volumes.models.enabled }}
      volumes:
        - name: models-volume
          {{- if eq .Values.backend.volumes.models.type "emptyDir" }}
          emptyDir:
            sizeLimit: {{ .Values.backend.volumes.models.size }}
          {{- else if eq .Values.backend.volumes.models.type "persistentVolumeClaim" }}
          persistentVolumeClaim:
            claimName: {{ include "backend.name" . }}-models
          {{- end }}
      {{- end }}
      {{- with .Values.backend.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.backend.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.backend.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }} 